Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To get the application URL, run:

{{- if .Values.istio.enabled }}
  You're using Istio Gateway. Your application should be available at:
  {{- range .Values.istio.virtualService.hosts }}
  http://{{ . }}
  {{- if $.Values.certManager.enabled }}
  https://{{ . }}
  {{- end }}
  {{- end }}

{{- else if .Values.ingress.enabled }}
  {{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http://{{ $host.host }}{{ .path }}
  {{- if or $.Values.ingress.tls $.Values.certManager.enabled }}
  https://{{ $host.host }}{{ .path }}
  {{- end }}
  {{- end }}
  {{- end }}

{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ .Release.Name }}-backend)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT

{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ .Release.Name }}-backend'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ .Release.Name }}-backend --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}

{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ .Release.Name }}-backend" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:{{ .Values.service.targetPort }}
{{- end }}

{{- if .Values.certManager.enabled }}

TLS certificates will be managed by cert-manager using {{ .Values.certManager.issuer.kind }} "{{ .Values.certManager.issuer.name }}".
Certificate status can be checked with:
  kubectl get certificate {{ .Release.Name }}-backend-cert -n {{ .Release.Namespace }}
{{- end }} 